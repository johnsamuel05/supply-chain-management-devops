pipeline {
    agent any
    
    environment {
        DOCKERFILE_PATH = "supplier_service/Dockerfile"
        IMAGE_NAME = "attemptmaster/supplier-service:${env.BUILD_NUMBER}"
        LATEST_IMAGE = "attemptmaster/supplier-service:latest"
        DOCKER_REGISTRY = "index.docker.io"
        CREDENTIALS_ID = "attemptmaster"
        KUBECONFIG = credentials('kubeconfig')
    }

    stages {
        stage('Build') {
            steps {
                script {
                    docker.build("${IMAGE_NAME}", "-f ${DOCKERFILE_PATH} supplier_service")
                }
            }
        }
        
        stage('Push to Docker Registry') {
            steps {
                withCredentials([usernamePassword(credentialsId: CREDENTIALS_ID, usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASSWORD')]) {
                    script {
                        // Login to Docker Hub
                        sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin'

                        // Tag the image with the build number and latest tag
                        sh "docker tag ${IMAGE_NAME} ${LATEST_IMAGE}"

                        // Push the image with the build number tag
                        sh "docker push ${IMAGE_NAME}"

                        // Push the image with the latest tag
                        sh "docker push ${LATEST_IMAGE}"
                    }
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                withKubeConfig([credentialsId: 'kubeconfig', contextName: '', namespace: 'default', serverUrl: '']) {
                    script {
                        sh 'kubectl apply -f k8s/supplier-service.yaml'
                    }
                }
            }
        }
    }
    }
}
