pipeline {
    agent any
    
    environment {
        DOCKERFILE_PATH = "inventory_service/Dockerfile"
        IMAGE_NAME = "inventory-service:${env.BUILD_NUMBER}"
        DOCKER_REPO = "attemptmaster/devops"
    }

    stages {
        stage('Build') {
            steps {
                script {
                    docker.build(IMAGE_NAME, "-f ${DOCKERFILE_PATH} inventory_service")
                }
            }
        }
        
        stage('Unit Test') {
            steps {
                script {
                    docker.image(IMAGE_NAME).inside {
                        sh 'pytest tests/unit'
                    }
                }
            }
        }
        
        stage('Integration Test') {
            steps {
                script {
                    docker.image(IMAGE_NAME).inside {
                        sh 'pytest tests/integration'
                    }
                }
            }
        }

        stage('Push to Docker Registry') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'attemptmaster', usernameVariable: 'USER', passwordVariable: 'PASSWORD')]) {
                    script {
                        def registry_url = "index.docker.io"
                        sh "echo $PASSWORD | docker login -u $USER --password-stdin https://${registry_url}"
                        docker.withRegistry("https://${registry_url}", 'attemptmaster') {
                            docker.image(IMAGE_NAME).push("${env.BUILD_NUMBER}")
                            docker.image(IMAGE_NAME).push("latest")
                        }
                    }
                }
            }
        }
        
        stage('Deploy to Production') {
            steps {
                script {
                    // Add deployment script or commands here
                    // For example:
                    // sh 'kubectl apply -f deployment.yaml'
                }
            }
        }
    }
}
